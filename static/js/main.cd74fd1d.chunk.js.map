{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","selectedTabId","tabs","onTabSelected","selectedTab","find","tab","id","className","map","title","classNames","href","onClick","handleTabClick","content","App","useState","setSelectedTadId","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,cACAC,EAEI,EAFJA,KACAC,EACI,EADJA,cAEMC,EAAcF,EAAKG,MAAK,SAAAC,GAAG,OAAIL,IAAkBK,EAAIC,OAAOL,EAAK,GAQvE,OAEE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAAAH,GACR,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MAEZ,OACE,oBACEF,UAAWG,IAAW,CACpB,YAAaP,EAAYG,KAAOD,EAAIC,KAEtC,UAAQ,MAJV,SAOE,mBACEK,KAAI,WAAML,GACV,UAAQ,UACRM,QAAS,kBAzBF,SAACP,GAClBL,IAAkBK,EAAIC,IACxBJ,EAAcG,GAuBaQ,CAAeR,IAHhC,SAKGI,KAPEH,UAef,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYW,cC9CRb,EAAc,CACzB,CAAEK,GAAI,QAASG,MAAO,QAASK,QAAS,eACxC,CAAER,GAAI,QAASG,MAAO,QAASK,QAAS,eACxC,CAAER,GAAI,QAASG,MAAO,QAASK,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAASf,EAAK,GAAGK,IAA3D,mBAAON,EAAP,KAAsBiB,EAAtB,KAMA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,6CACsBN,EAAKG,MAAK,SAAAC,GAAG,OAAIL,IAAkBK,EAAIC,aAD7D,aACsB,EAA4CG,SAElE,cAAC,EAAD,CACET,cAAeA,EACfC,KAAMA,EACNC,cAZkB,SAACG,GACvBY,EAAiBZ,EAAIC,WCdzBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cd74fd1d.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nimport { Tab } from '../../types/tabs';\n\ntype Props = {\n  selectedTabId: string;\n  tabs: Tab[];\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  selectedTabId,\n  tabs,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => selectedTabId === tab.id) || tabs[0];\n\n  const handleTabClick = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                className={classNames({\n                  'is-active': selectedTab.id === tab.id,\n                })}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleTabClick(tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab } from './types/tabs';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTadId] = useState(tabs[0].id);\n\n  const handleTabSelect = (tab: Tab) => {\n    setSelectedTadId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${tabs.find(tab => selectedTabId === tab.id)?.title}`}\n      </h1>\n      <Tabs\n        selectedTabId={selectedTabId}\n        tabs={tabs}\n        onTabSelected={handleTabSelect}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}